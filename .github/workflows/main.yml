name: Hprofile Actions 
on: workflow_dispatch
env: 
  AWS_REGION: ${{ secrets.AWS_REGION }}
jobs: 
  Testing: 
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout 
        uses: actions/checkout@v4
      
      - name: Maven test 
        run: mvn test
      
      - name: Checkstyle 
        run: mvn checkstyle:checkstyle
      
      - name: Setup Java 11 
        uses: actions/setup-java@v4 
        with: 
          distribution: 'temurin'
          java-version: '11'

      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7
        
      # Run sonar-scanner
      - name: SonarQube Scan
        run: sonar-scanner -X
            -Dsonar.host.url=${{ secrets.SONAR_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT }}
            -Dsonar.sources=src/
            -Dsonar.junit.reportsPath=target/surefire-reports/
            -Dsonar.jacoco.reportsPath=target/jacoco.exec
            -Dsonar.java.checkstyle.reportsPath=target/checkstyle-result.xml
            -Dsonar.java.binaries=target/test-classes/com/visualpathit/account
            -Dsonar.verbose=true
      
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL }}

  BuildAndPublish:
    runs-on: ubuntu-latest
    needs: Testing
    steps: 
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Update application.properties file 
        run: |
          sed -i "s/^jdbc.username.*$/jdbc.username\=${{ secrets.RDS_USER}}/" src/main/resources/application.properties
          sed -i "s/^jdbc.password.*$/jdbc.password\=${{ secrets.RDS_PASS}}/" src/main/resources/application.properties
          sed -i "s/sd01/${{ secrets.RDS_ENDPOINT }}/" src/main/resources/application.properties
          
      - name: Upload Image to ECR 
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY }}
          repo: ${{ secrets.ECR_REPOSITORY }}
          region: ${{ env.AWS_REGION }}
          tags: latest,${{ github.run_number}}
          daemon_off: false
          dockerfile: ./Dockerfile
          context: ./
